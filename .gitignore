# Five Principles Prompt Engineering App - .gitignore

# ===========================
# Python specific
# ===========================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ===========================
# Streamlit specific
# ===========================

# Streamlit cache
.streamlit/

# Streamlit secrets
streamlit/secrets.toml

# ===========================
# API Keys and Secrets
# ===========================

# Environment files with secrets
.env.local
.env.development
.env.production
.env.staging
.env.test

# API key files
api_keys.txt
openai_key.txt
secrets.json
config.json

# Credentials
credentials.json
service-account-key.json
gcp-key.json
aws-credentials.txt

# ===========================
# Application specific
# ===========================

# Generated prompts (users may want to keep these private)
generated_prompts/
output/
exports/
saved_prompts/

# Logs
logs/
*.log
app.log
error.log
debug.log

# Temporary files
temp/
tmp/
cache/
.cache/

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration overrides
config_override.yaml
config_local.yaml
settings_local.py

# User uploads
uploads/
user_data/

# Session data
sessions/
.sessions/

# ===========================
# Development tools
# ===========================

# VS Code
.vscode/
.history/

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# ===========================
# OS specific
# ===========================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===========================
# Docker
# ===========================

# Docker files (uncomment if you don't want to track them)
# Dockerfile*
# docker-compose*.yml
# .dockerignore

# ===========================
# Cloud deployment
# ===========================

# Heroku
.heroku/

# Vercel
.vercel/

# Netlify
.netlify/

# AWS
.aws/

# Google Cloud
.gcloud/

# ===========================
# Monitoring and Analytics
# ===========================

# Monitoring data
monitoring/
metrics/
analytics/

# Performance profiles
*.prof
*.profile

# Memory dumps
*.dump

# ===========================
# Documentation
# ===========================

# Generated documentation
docs/_build/
docs/build/
documentation/html/
documentation/latex/

# Sphinx
_build/
_static/
_templates/

# ===========================
# Testing
# ===========================

# Test outputs
test_outputs/
test_results/
.coverage.*
coverage_html/

# Pytest
.pytest_cache/
pytest.ini

# ===========================
# Package managers
# ===========================

# npm (if using any JavaScript tools)
node_modules/
package-lock.json
yarn.lock

# Conda
.conda/

# ===========================
# Backup files
# ===========================

# Backup files
*.bak
*.backup
*.old
*.orig
*~

# ===========================
# Miscellaneous
# ===========================

# Large files (models, datasets)
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.parquet
models/
datasets/
data/raw/
data/processed/

# Jupyter notebook outputs
*.ipynb

# R files (if any R integration)
.Rhistory
.RData
.Ruserdata

# Temporary directories
tmp*/
temp*/

# Lock files
*.lock

# PID files
*.pid

# Socket files
*.sock

# Certificate files
*.pem
*.crt
*.key
*.p12
*.pfx

# Archive files
*.zip
*.tar.gz
*.tar.bz2
*.rar
*.7z

# Media files (unless needed)
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.mp4
# *.avi
# *.mov

# Screenshots (if you want to track them, comment these out)
screenshots/*.png
screenshots/*.jpg
screenshots/*.gif